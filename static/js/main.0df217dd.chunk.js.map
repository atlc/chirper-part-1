{"version":3,"sources":["components/LeftSideItem.jsx","components/LeftSidebar.jsx","components/Chirp.jsx","components/PrerenderedChirps.jsx","components/ChirpPanel.jsx","components/Trend.jsx","components/TrendsPane.jsx","components/App.jsx","index.js"],"names":["LeftSideItem","className","Button","variant","href","this","props","link","disabled","src","icon","height","width","alt","label","Component","LeftSidebar","state","items","focusToTextarea","App","isLoggedIn","document","getElementById","focus","style","paddingLeft","map","item","index","key","onClick","Chirp","Row","id","Card","Header","Col","avatar","firstName","lastName","username","Body","text","PrerenderedChirps","users","quotes","componentDidMount","a","fetch","then","response","json","setState","data","splice","chirpData","i","Math","random","toString","substr","Date","now","first_name","last_name","toLowerCase","String","fromCharCode","author","ChirpPanel","chirpTextArea","handleTextAreaBlur","handleTextAreaFocus","value","length","handleChirpTextUpdate","newText","chars","target","chirpText","chirpButtonText","handleChirpButtonSubmitOnClick","newChirps","user","chirpButtonAndIcon","onChange","onFocus","onBlur","placeholder","maxLength","rows","cols","Trend","TrendsPane","trends","paddingRight","trend","handleSignupDelete","initialState","handleLoginLogout","Swal","fire","title","html","focusConfirm","preConfirm","name","buttonOneText","buttonTwoText","Container","md","ReactDOM","render"],"mappings":"gUAgBeA,E,uKAXP,OACI,wBAAIC,UAAU,+BACV,kBAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAQ,eAAeC,KAAMC,KAAKC,MAAMC,KAAMC,SAAUH,KAAKC,MAAME,UAC9F,yBAAKC,IAAKJ,KAAKC,MAAMI,KAAOC,OAAQ,GAAIC,MAAO,GAAIC,IAAKR,KAAKC,MAAMO,MADvE,WAEiBR,KAAKC,MAAMQ,Y,GANjBC,aCiCZC,E,4MA/BXC,MAAQ,CACJC,MAAO,CACH,CAAEJ,MAAO,OAAQP,KAAM,gDAAiDG,KAAM,uGAAwGG,IAAK,mBAC3L,CAAEC,MAAO,UAAWP,KAAM,mDAAoDG,KAAM,6EAA8EG,IAAK,8BACvK,CAAEC,MAAO,UAAWP,KAAM,mDAAoDG,KAAM,qGAAsGG,IAAK,+BAC/L,CAAEC,MAAO,WAAYP,KAAM,oDAAqDG,KAAM,qEAAsEG,IAAK,4BACjK,CAAEC,MAAO,YAAaP,KAAM,qDAAsDG,KAAM,2DAA4DG,IAAK,sBACzJ,CAAEC,MAAO,QAASP,KAAM,iDAAkDG,KAAM,oDAAqDG,IAAK,kBAC1I,CAAEC,MAAO,UAAWP,KAAM,mDAAoDG,KAAM,2DAA4DG,IAAK,mC,EAI7JM,gBAAkB,WAAY,EAAKb,MAAMc,IAAIC,YAAYC,SAASC,eAAe,kBAAkBC,S,uDAEzF,IAAD,OACL,OACI,wBAAIvB,UAAU,qEAAqEwB,MAAO,CAACC,YAAa,SACpG,wBAAIzB,UAAU,YACV,kBAACC,EAAA,EAAD,CAAQM,UAAQ,EAACP,UAAU,mBAAmBE,QAAQ,QAClD,yBAAKM,IAAK,wDAAyDE,OAAQ,GAAIC,MAAO,GAAIC,IAAI,sBAGrGR,KAAKY,MAAMC,MAAMS,KAAI,SAACC,EAAMC,GAAP,OAAiB,kBAAC,EAAD,CAAcC,IAAKD,EAAOf,MAAOc,EAAKd,MAAOP,KAAMqB,EAAKrB,KAAMG,KAAMkB,EAAKlB,KAAMG,IAAKe,EAAKf,IAAKL,UAAW,EAAKF,MAAMc,IAAIC,gBAC/J,wBAAIpB,UAAU,YACV,kBAACC,EAAA,EAAD,CAAQM,UAAWH,KAAKC,MAAMc,IAAIC,WAAYpB,UAAU,mBAAmBE,QAAQ,OAAO4B,QAAS1B,KAAKc,iBAAkBd,KAAKC,MAAMc,IAAIC,WAAa,KAAO,mBAA7J,iB,GAzBMN,a,gBC8BXiB,E,uKA1BP,OACI,kBAACC,EAAA,EAAD,CAAKH,IAAKzB,KAAKC,MAAM4B,GAAIjC,UAAU,oDAC/B,kBAACkC,EAAA,EAAD,CAAMlC,UAAU,sDACZ,kBAACkC,EAAA,EAAKC,OAAN,CAAanC,UAAU,aACnB,kBAACoC,EAAA,EAAD,KACI,yBAAK5B,IAAKJ,KAAKC,MAAMgC,OAAQ3B,OAAQ,GAAIC,MAAO,GAAIX,UAAU,YAAYY,IAAI,MAElF,kBAACwB,EAAA,EAAD,KACI,yBAAKpC,UAAU,+BAA+BI,KAAKC,MAAMiC,UAAzD,IAAqElC,KAAKC,MAAMkC,UAChF,yBAAKvC,UAAU,0BAAf,IAA0CI,KAAKC,MAAMmC,YAG7D,kBAACN,EAAA,EAAKO,KAAN,KACQ,kBAACT,EAAA,EAAD,KAAK,yBAAKhC,UAAU,mDAAmDI,KAAKC,MAAMqC,OAClF,kBAACV,EAAA,EAAD,CAAKhC,UAAU,iBACX,kBAACoC,EAAA,EAAD,KAAK,kBAACnC,EAAA,EAAD,CAAQC,QAAS,gBAAjB,YACL,kBAACkC,EAAA,EAAD,KAAK,kBAACnC,EAAA,EAAD,CAAQC,QAAS,gBAAjB,aACL,kBAACkC,EAAA,EAAD,KAAK,kBAACnC,EAAA,EAAD,CAAQC,QAAS,gBAAjB,kB,GAnBjBY,aCqCL6B,G,kNAvCX3B,MAAQ,CACJ4B,MAAO,GACPC,OAAQ,I,EAGZC,kB,sBAAoB,sBAAAC,EAAA,sEACVC,MAAM,sCACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAACR,MAAM,YAAIO,EAAKE,WAC3CJ,MAAK,kBAAMD,MAAM,sCACbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAACR,MAAM,GAAD,mBAAM,EAAK5B,MAAM4B,OAAjB,YAA2BO,EAAKE,eAN1D,uBAQVL,MAAM,+BACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAACP,OAAQM,EAAKG,OAAO,EAAE,SAVvC,2C,uDAaV,IAAD,OACL,OACIlD,KAAKY,MAAM4B,MAAMlB,KAAI,SAAC6B,EAAWC,GAC7B,OACI,kBAAC,EAAD,CACIvB,GAAE,UAAKwB,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAA1C,YAAiDC,KAAKC,MAAMH,SAAS,KACvEtB,OAAQkB,EAAUlB,OAClBC,UAAWiB,EAAUQ,WACrBxB,SAAUgB,EAAUS,UACpBxB,SAAQ,UAAKe,EAAUQ,WAAWE,cAA1B,YAA2CV,EAAUS,UAAUC,eACvEvB,KAAM,EAAK1B,MAAM6B,OAAO,GAAlB,WACE,EAAK7B,MAAM6B,OAAOW,GAAGd,KADvB,aACgCwB,OAAOC,aAAa,KADpD,mBAC8DD,OAAOC,aAAa,KADlF,YAC0F,EAAKnD,MAAM6B,OAAOW,GAAGY,QAC/G,Y,GA/BEtD,cCmFjBuD,E,kDA7EX,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IAQVyC,kBAAoB,kBAAM,EAAKwB,cAAgBjD,SAASC,eAAe,mBATpD,EAWnBiD,mBAAqB,kBAAM,EAAKD,cAAc9C,MAAnB,0DAXR,EAanBgD,oBAAsB,kBAAM,EAAKF,cAAc9C,MAAnB,sCAAwD,IAAI,EAAK8C,cAAcG,MAAMC,OAArF,aAAgG,IAAI,EAAKJ,cAAcG,MAAMC,OAA7H,sBAbT,EAenBC,sBAAwB,SAACC,GACrB,IAAIC,EAAQD,EAAQE,OAAOL,MAAMC,OACjC,EAAKJ,cAAc9C,MAAnB,sCAAwD,IAAIqD,EAA5D,aAAsE,IAAIA,EAA1E,qBAEA,EAAKzB,SAAS,CACV2B,UAAWH,EAAQE,OAAOL,MAC1BO,gBAAgB,UAAD,OAAYH,EAAZ,YArBJ,EAyBnBI,+BAAiC,WACA,KAAzB,EAAKjE,MAAM+D,WACX,EAAKT,cAAcG,MAAQ,GAC3B,EAAKrB,SAAS,CACV4B,gBAAiB,QACjBE,UAAU,CACN,kBAAC,EAAD,CACIjD,GAAE,UAAKwB,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAA1C,YAAiDC,KAAKC,MAAMH,SAAS,KACvEtB,OAAQ,4BACRC,UAAW,0BACXC,SAAU,EAAKlC,MAAMc,IAAIgE,KACzB3C,SAAU,EAAKnC,MAAMc,IAAIgE,KACzBzC,KAAM,EAAK1B,MAAM+D,aAPhB,mBASF,EAAK/D,MAAMkE,YAElBH,UAAW,MAGf,EAAKT,cAAc/C,SA1CvB,EAAKP,MAAQ,CACTgE,gBAAiB,QACjBD,UAAW,GACXG,UAAW,IALA,E,qDAiDf,IAAIE,EASJ,OARIhF,KAAKC,MAAMc,IAAIC,aACfgE,EACI,kBAAChD,EAAA,EAAD,KACI,yBAAKpC,UAAU,UAAUQ,IAAK,wDAAyDE,OAAQ,GAAIC,MAAO,GAAIC,IAAI,oBAClH,kBAACX,EAAA,EAAD,CAAQD,UAAU,iCAAiCE,QAAQ,OAAO4B,QAAS1B,KAAK6E,gCAAiC7E,KAAKY,MAAMgE,mBAKpI,oCACI,kBAAChD,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,KAAK,wBAAIpC,UAAU,6CAA6CI,KAAKC,MAAMc,IAAIC,WAAa,OAAS,6BAEzG,kBAACY,EAAA,EAAD,CAAKhC,UAAU,8BACVoF,EACD,kBAAChD,EAAA,EAAD,KACI,8BAAUH,GAAG,iBAAiB1B,UAAWH,KAAKC,MAAMc,IAAIC,WAAYiE,SAAUjF,KAAKuE,sBAAuBW,QAASlF,KAAKoE,oBAAqBe,OAAQnF,KAAKmE,mBAAoBiB,YAAW,UAAKpF,KAAKC,MAAMc,IAAIgE,KAAO,sBAAwB/E,KAAKC,MAAMc,IAAIgE,KAAO,IAAM,+CAAiDM,UAAU,MAAMzF,UAAU,wDAAwD0F,KAAK,IAAIC,KAAK,SAGja,kBAAC3D,EAAA,EAAD,KAAK,kBAACI,EAAA,EAAD,KAAK,uBAAGpC,UAAU,eACtBI,KAAKY,MAAMkE,UACZ,kBAAC,EAAD,W,GAxESpE,aCMV8E,E,uKARP,OACI,wBAAI5F,UAAU,YACV,kBAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAQ,eAAeC,KAAMC,KAAKC,MAAMC,MAAvE,IAA+EF,KAAKC,MAAMQ,Y,GALtFC,aCgCL+E,E,4MA9BX7E,MAAQ,CACJ8E,OAAQ,CACJ,CAAEjF,MAAO,eAAgBP,KAAM,4CAC/B,CAAEO,MAAO,UAAWP,KAAM,wGAC1B,CAAEO,MAAO,sBAAuBP,KAAM,kCACtC,CAAEO,MAAO,kBAAmBP,KAAM,iCAClC,CAAEO,MAAO,iBAAkBP,KAAM,gFACjC,CAAEO,MAAO,MAAOP,KAAM,6BACtB,CAAEO,MAAO,qBAAsBP,KAAM,yBACrC,CAAEO,MAAO,mBAAoBP,KAAM,gCACnC,CAAEO,MAAO,qBAAsBP,KAAM,4CACrC,CAAEO,MAAO,yBAA0BP,KAAM,yBACzC,CAAEO,MAAO,SAAUP,KAAM,4BACzB,CAAEO,MAAO,gBAAiBP,KAAM,gCAChC,CAAEO,MAAO,8BAA+BP,KAAM,mCAC9C,CAAEO,MAAO,oBAAqBP,KAAM,8BACpC,CAAEO,MAAO,iBAAkBP,KAAM,oC,uDAKrC,OACI,wBAAIN,UAAU,6FAA6FwB,MAAO,CAACuE,aAAc,SAC7H,wBAAI/F,UAAU,YAAW,kBAACC,EAAA,EAAD,CAAQD,UAAU,sBAAsBE,QAAQ,QAAhD,sBACxBE,KAAKY,MAAM8E,OAAOpE,KAAI,SAACsE,EAAOpE,GAAR,OAAkB,kBAAC,EAAD,CAAOC,IAAKD,EAAOf,MAAOmF,EAAMnF,MAAOP,KAAM0F,EAAM1F,e,GAzBnFQ,aCgFVK,G,wDAtEX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAWV4F,mBAZmB,sBAYE,sBAAAlD,EAAA,sDACZ,EAAK/B,MAAMI,WAGZ,EAAKgC,SAAS,EAAK8C,cAFnB,EAAKC,oBAFQ,2CAZF,EAoBnBA,kBApBmB,sBAoBC,8BAAApD,EAAA,yDACX,EAAK/B,MAAMI,WADA,gCAEkBgF,IAAKC,KAAK,CACpCC,MAAO,iBACPC,KACI,2JAIJC,cAAc,EACdC,WAAY,WACV,OAAOpF,SAASC,eAAe,kBAAkBmD,SAX3C,iBAEGiC,EAFH,EAEJjC,SAaJ,EAAKrB,SAAS,CAAC+B,KAAMuB,IACrB,EAAKtD,SAAS,CACVhC,YAAY,EACZuF,cAAe,SACfC,cAAe,EAAK5F,MAAMmE,KAAX,kBAA6B,EAAKnE,MAAMmE,MAAS,8FAnB5D,sBAuBZ,EAAK/B,SAAS,EAAK8C,cAvBP,2CAjBhB,EAAKlF,MAAQ,CACTI,YAAY,EACZuF,cAAe,QACfC,cAAe,UACfzB,KAAM,MAEV,EAAKe,aAAe,EAAKlF,MATV,E,qDAgDf,OACI,kBAAC6F,EAAA,EAAD,KACI,kBAAC7E,EAAA,EAAD,CAAKhC,UAAU,8EACX,kBAACoC,EAAA,EAAD,CAAK0E,GAAI,GAAG,kBAAC7G,EAAA,EAAD,CAAQ6B,QAAS1B,KAAK+F,kBAAmBnG,UAAU,qBAAqBE,QAAQ,gBAAgBE,KAAKY,MAAM2F,gBACvH,kBAACvE,EAAA,EAAD,CAAK0E,GAAI,GAAG,kBAAC7G,EAAA,EAAD,CAAQ6B,QAAS1B,KAAK6F,mBAAoBjG,UAAU,qBAAqBE,QAAQ,QAAQE,KAAKY,MAAM4F,iBAEpH,kBAAC5E,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAK0E,GAAI,EAAG9G,UAAU,2BAClB,kBAAC,EAAD,CAAamB,IAAKf,KAAKY,SAE3B,kBAACoB,EAAA,EAAD,CAAK0E,GAAI,EAAG9G,UAAU,iDAClB,kBAAC,EAAD,CAAYmB,IAAKf,KAAKY,SAE1B,kBAACoB,EAAA,EAAD,CAAK0E,GAAI,GACL,kBAAC,EAAD,a,GA/DNhG,cCTlBiG,IAASC,OAAO,kBAAC,EAAD,MAAS3F,SAASC,eAAe,W","file":"static/js/main.0df217dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass LeftSideItem extends Component {\n    render() {\n        return (\n            <li className=\"nav-item children-width-100\">\n                <Button className=\"badge-pill\" variant=\"outline-info\" href={this.props.link} disabled={this.props.disabled}>\n                    <img src={this.props.icon}  height={32} width={32} alt={this.props.alt} />\n                    &nbsp;&nbsp;{this.props.label}\n                </Button>\n            </li>\n        );\n    }\n}\n\nexport default LeftSideItem;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport LeftSideItem from './LeftSideItem';\r\n\r\nclass LeftSidebar extends Component {\r\n    state = {\r\n        items: [\r\n            { label: \"Home\", link: \"https://www.google.com/search?tbm=isch&q=Home\", icon: \"https://www.rawshorts.com/freeicons/wp-content/uploads/2017/01/blue_repicthousebase_1484336386-1.png\", alt: \"Icon of a house\"},\r\n            { label: \"Explore\", link: \"https://www.google.com/search?tbm=isch&q=Explore\", icon: \"https://cdn0.iconfinder.com/data/icons/huge-black-icons/512/Zoom_place.png\", alt: \"Icon of a magnifying glass\"},\r\n            { label: \"Updates\", link: \"https://www.google.com/search?tbm=isch&q=Updates\", icon: \"https://s3.amazonaws.com/iconbros/icons/icon_pngs/000/003/037/original/notification.png?1572711433\", alt: \"Icon of a notification bell\"},\r\n            { label: \"Messages\", link: \"https://www.google.com/search?tbm=isch&q=Messages\", icon: \"https://cdn.iconscout.com/icon/free/png-512/message-537-461910.png\", alt: \"Icon of a message bubble\"},\r\n            { label: \"Bookmarks\", link: \"https://www.google.com/search?tbm=isch&q=Bookmarks\", icon: \"https://www.freeiconspng.com/uploads/bookmark-icon-1.png\", alt: \"Icon of a bookmark\"},\r\n            { label: \"Lists\", link: \"https://www.google.com/search?tbm=isch&q=Lists\", icon: \"https://cdn.onlinewebfonts.com/svg/img_446233.png\", alt: \"Icon of a list\"},\r\n            { label: \"Profile\", link: \"https://www.google.com/search?tbm=isch&q=Profile\", icon: \"https://i.ya-webdesign.com/images/profile-icon-png-9.png\", alt: \"Icon of a person's silhouette\"}\r\n        ]\r\n    }\r\n\r\n    focusToTextarea = () => { if (this.props.App.isLoggedIn) document.getElementById('chirp-textarea').focus(); }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav flex-column children-margin-vert-10 pad-bot-10 bl-thin hr-thin\" style={{paddingLeft: 15+'px'}}>\r\n                <li className=\"nav-item\">\r\n                    <Button disabled className=\"badge-pill w-100\" variant=\"info\">\r\n                        <img src={\"https://image.flaticon.com/icons/png/128/92/92031.png\"} height={32} width={32} alt=\"Icon of a raven\" />\r\n                    </Button>\r\n                </li>\r\n                {this.state.items.map((item, index) => <LeftSideItem key={index} label={item.label} link={item.link} icon={item.icon} alt={item.alt} disabled={!this.props.App.isLoggedIn} />)}\r\n                <li className=\"nav-item\">\r\n                    <Button disabled={!this.props.App.isLoggedIn} className=\"badge-pill w-100\" variant=\"info\" onClick={this.focusToTextarea}>{this.props.App.isLoggedIn ? 'Go' : \"Click 'Login' to\"} Chirp!</Button>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftSidebar;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Chirp extends Component {\n    render() {\n        return (\n            <Row key={this.props.id} className=\"justify-content-center margin-top-5 margin-bot-5\">\n                <Card className=\"hr-thin vr-thin w-75 margin-bot-10 opaque-white-bg\">\n                    <Card.Header className=\"text-left\">\n                        <Col>\n                            <img src={this.props.avatar} height={48} width={48} className=\"img-round\" alt=''></img>\n                        </Col>\n                        <Col>\n                            <div className=\"text-white font-weight-bold\">{this.props.firstName} {this.props.lastName}</div>\n                            <div className=\"text-muted font-italic\">@{this.props.username}</div>\n                        </Col>\n                    </Card.Header>\n                    <Card.Body>\n                            <Row><div className=\"text-center text-white w-100 hr-thin pad-bot-10\">{this.props.text}</div></Row>\n                            <Row className=\"margin-top-10\">\n                                <Col><Button variant={\"outline-info\"}>Rechirp</Button></Col>\n                                <Col><Button variant={\"outline-info\"}>Bookmark</Button></Col>\n                                <Col><Button variant={\"outline-info\"}>Reply</Button></Col>\n                            </Row>\n                    </Card.Body>\n                </Card>\n            </Row>\n        );\n    }\n}\n\nexport default Chirp;","import React, { Component } from 'react';\nimport Chirp from './Chirp';\n\nclass PrerenderedChirps extends Component {\n    state = {\n        users: [],\n        quotes: []\n    }\n\n    componentDidMount = async () => {\n        await fetch('https://reqres.in/api/users?page=1')\n            .then(response => response.json())\n            .then(json => this.setState({users:[...json.data]}))\n            .then(() => fetch('https://reqres.in/api/users?page=2')\n                .then(response => response.json())\n                .then(json => this.setState({users: [...this.state.users, ...json.data]})));\n\n        await fetch(\"https://type.fit/api/quotes\")\n            .then(response => response.json())\n            .then(json => this.setState({quotes: json.splice(0,12)}));\n    }\n\n    render() {\n        return (\n            this.state.users.map((chirpData, i) => {\n                return (\n                    <Chirp\n                        id={`${Math.random().toString(36).substr(2, 16)}_${Date.now().toString(36)}`}\n                        avatar={chirpData.avatar}\n                        firstName={chirpData.first_name}\n                        lastName={chirpData.last_name}\n                        username={`${chirpData.first_name.toLowerCase()}.${chirpData.last_name.toLowerCase()}`}\n                        text={this.state.quotes[0] ? \n                            `\"${this.state.quotes[i].text}\" ${String.fromCharCode(160)} — ${String.fromCharCode(160)} ${this.state.quotes[i].author}`\n                            : ''\n                        }\n                    />\n                );\n            })\n        );\n    }\n};\n\nexport default PrerenderedChirps;","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Chirp from './Chirp';\r\nimport '../styles/helpers.css';\r\nimport PrerenderedChirps from './PrerenderedChirps';\r\n\r\nclass ChirpPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chirpButtonText: 'Chirp',\r\n            chirpText: '',\r\n            newChirps: []\r\n        };\r\n    }\r\n    \r\n    componentDidMount = () => this.chirpTextArea = document.getElementById('chirp-textarea');\r\n\r\n    handleTextAreaBlur = () => this.chirpTextArea.style=`background-color: rgba(255, 255, 255, 0.05) !important`;\r\n\r\n    handleTextAreaFocus = () => this.chirpTextArea.style=`background-color: rgba(255, ${255-this.chirpTextArea.value.length}, ${255-this.chirpTextArea.value.length}, 0.5) !important`;\r\n    \r\n    handleChirpTextUpdate = (newText) => {\r\n        let chars = newText.target.value.length;\r\n        this.chirpTextArea.style=`background-color: rgba(255, ${255-chars}, ${255-chars}, 0.5) !important`;\r\n\r\n        this.setState({\r\n            chirpText: newText.target.value,\r\n            chirpButtonText: `Chirp (${chars}/280)`\r\n        });\r\n    }\r\n\r\n    handleChirpButtonSubmitOnClick = () => {\r\n        if (this.state.chirpText !== '') {\r\n            this.chirpTextArea.value = '';\r\n            this.setState({\r\n                chirpButtonText: 'Chirp',\r\n                newChirps: [\r\n                    <Chirp\r\n                        id={`${Math.random().toString(36).substr(2, 16)}_${Date.now().toString(36)}`}\r\n                        avatar={'https://picsum.photos/128'}\r\n                        firstName={'Cool Covalence Student:'}\r\n                        lastName={this.props.App.user}\r\n                        username={this.props.App.user}\r\n                        text={this.state.chirpText}\r\n                    />,\r\n                    ...this.state.newChirps\r\n                ],\r\n                chirpText: ''\r\n            });\r\n        } else {\r\n            this.chirpTextArea.focus();\r\n        } \r\n    }\r\n\r\n    render() {\r\n        let chirpButtonAndIcon;\r\n        if (this.props.App.isLoggedIn) {\r\n            chirpButtonAndIcon =\r\n                <Col>\r\n                    <img className=\"bg-info\" src={\"https://image.flaticon.com/icons/png/128/92/92031.png\"} height={64} width={64} alt=\"Icon of a raven\" />\r\n                    <Button className=\"badge-pill w-100 margin-top-10\" variant=\"info\" onClick={this.handleChirpButtonSubmitOnClick}>{this.state.chirpButtonText}</Button>\r\n                </Col>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col><h1 className=\"text-center text-white hr-thin pad-bot-10\">{this.props.App.isLoggedIn ? 'Home' : 'Trends Around The Globe'}</h1></Col>\r\n                </Row>\r\n                <Row className=\"margin-top-5 margin-bot-10\">\r\n                    {chirpButtonAndIcon}\r\n                    <Col>\r\n                        <textarea id=\"chirp-textarea\" disabled={!this.props.App.isLoggedIn} onChange={this.handleChirpTextUpdate} onFocus={this.handleTextAreaFocus} onBlur={this.handleTextAreaBlur} placeholder={`${this.props.App.user ? \"What's happening, @\" + this.props.App.user + \"?\" : \"Log in to tell us what's good in the world.\"}`} maxLength=\"280\" className=\"opaque-white-bg pad-bot-20 text-white hr-thin vr-thin\" rows=\"4\" cols=\"50\"></textarea>\r\n                    </Col>\r\n                </Row>\r\n                <Row><Col><p className=\"hr-thicc\"></p></Col></Row>\r\n                {this.state.newChirps}\r\n                <PrerenderedChirps />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChirpPanel;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass Trend extends Component {\n\n    render() {\n        return (\n            <li className=\"nav-item\">\n                <Button className=\"badge-pill\" variant=\"outline-info\" href={this.props.link}> {this.props.label}</Button>\n            </li>\n        );\n    }\n}\n\nexport default Trend;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Trend from './Trend';\r\n\r\nclass TrendsPane extends Component {\r\n    state = {\r\n        trends: [\r\n            { label: \"r/Birmingham\", link: \"https://old.reddit.com/r/Birmingham/new/\"},\r\n            { label: \"Weather\", link: \"https://weather.com/weather/today/l/d20ef0ab981eddeccb6fd6a2d668969fb6fb6f2ae3a5d2d627a89bd8b566ea41\"},\r\n            { label: \"News (no comments!)\", link: \"https://www.al.com/birmingham/\"},\r\n            { label: \"City Government\", link: \"https://www.birminghamal.gov/\"},\r\n            { label: \"ADPH - COVID19\", link: \"https://www.alabamapublichealth.gov/infectiousdiseases/2019-coronavirus.html\"},\r\n            { label: \"UAB\", link: \"https://www.uab.edu/home/\"},\r\n            { label: \"Covalence Bootcamp\", link: \"https://covalence.io/\"},\r\n            { label: \"Innovation Depot\", link: \"https://innovationdepot.org/\"},\r\n            { label: \"Bham Museum of Art\", link: \"https://www.artsbma.org/art/exhibitions/\"},\r\n            { label: \"Civil Rights Institute\", link: \"https://www.bcri.org/\"},\r\n            { label: \"Vulcan\", link: \"https://visitvulcan.com/\" },\r\n            { label: \"Railroad Park\", link: \"http://www.railroadpark.org/\"},\r\n            { label: \"Bham Barons / Regions Field\", link: \"https://www.milb.com/birmingham\" },\r\n            { label: \"Botanical Gardens\", link: \"https://www.bbgardens.org/\"},\r\n            { label: \"Birmingham Zoo\", link: \"https://www.birminghamzoo.com/\"},\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav flex-column children-margin-vert-10 grandchildren-width-100 pad-bot-10 hr-thin br-thin\" style={{paddingRight: 15+'px'}}>\r\n                <li className=\"nav-item\"><Button className=\"badge-pill disabled\" variant=\"info\">Birmingham Trends</Button></li>\r\n                {this.state.trends.map((trend, index) => <Trend key={index} label={trend.label} link={trend.link} />)}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TrendsPane;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\nimport LeftSidebar from './LeftSidebar';\nimport ChirpPanel from './ChirpPanel';\nimport TrendsPane from './TrendsPane';\nimport '../styles/helpers.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoggedIn: false,\n            buttonOneText: 'Login',\n            buttonTwoText: 'Sign up',\n            user: null\n        }\n        this.initialState = this.state;\n    }\n\n    handleSignupDelete = async () => {\n        if (!this.state.isLoggedIn) {\n            this.handleLoginLogout();\n        } else {\n            this.setState(this.initialState);\n        }\n    }\n\n    handleLoginLogout = async () => {\n        if (!this.state.isLoggedIn) {\n            const { value: name } = await Swal.fire({\n                title: 'Input username',\n                html:\n                    '<input id=\"username-input\" type=\"text\" placeholder=\"Enter your username here\">' +\n                    '<br /><br />' +\n                    '<input type=\"password\" placeholder=\"Enter your password here\">'\n                ,\n                focusConfirm: false,\n                preConfirm: () => {\n                  return document.getElementById('username-input').value\n                }\n            });\n            if (name) {\n                this.setState({user: name});\n                this.setState({\n                    isLoggedIn: true,\n                    buttonOneText: 'Logout',\n                    buttonTwoText: this.state.user ? `Delete @${this.state.user}` : 'Haxx, you logged in without a real account because this is using client-side validation!'\n                });\n            }\n        } else {\n            this.setState(this.initialState);\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-end margin-top-10 margin-bot-20 hr-thin pad-bot-10 vr-thin\">\n                    <Col md={2}><Button onClick={this.handleLoginLogout} className=\"badge-pill vr-thin\" variant=\"outline-info\">{this.state.buttonOneText}</Button></Col>\n                    <Col md={2}><Button onClick={this.handleSignupDelete} className=\"badge-pill vr-thin\" variant=\"info\">{this.state.buttonTwoText}</Button></Col>\n                </Row>\n                <Row>\n                    <Col md={2} className=\"justify-content-md-left\">\n                        <LeftSidebar App={this.state} />\n                    </Col>\n                    <Col md={7} className=\"justify-content-md-center text-center vr-thin\">\n                        <ChirpPanel App={this.state} />\n                    </Col>\n                    <Col md={3}>\n                        <TrendsPane />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {default as App} from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}